---
title: "Demo 1: Analytical Models"
execute:
    echo: false
format:
    html:
        css: ../_lib/WMR2D/css/main.css
        highlight-style: pygments
---

Let's start with the following problem statement:

> We want to evolve an autonomous wheeled mobile robot (WMR) to maximize the distance traveled in a fixed amount of time.

Base demo

```typescript
chassisPosition = initialPosition + angularVelocity * wheelRadius * time;
```

```{=html}
<div>
    <canvas id="wmr-canvas1"></canvas>
</div>
```

```{ojs}
import { Player } from '../_lib/Player/dist/player.js';
import { WMRSimulator, WMR2DMode } from  '../_lib/WMR2D/dist/wmr2d.js';

uiTimeEnd = 16.0;
uiTimeStep = 0.1;

wmr1 = new WMRSimulator( 'wmr-canvas1', WMR2DMode.ClosedForm );
player1 = new Player( uiTimeEnd, uiTimeStep, (time) => wmr1.step(time), () => wmr1.reset() );
player1.create();
```


With wall (what is the equation now?); can figure it out with some work.

```{=html}
<div>
    <canvas id="wmr-canvas2"></canvas>
</div>
```

```{ojs}
wmr2 = new WMRSimulator( 'wmr-canvas2', WMR2DMode.ClosedForm, { addWall: true } );
player2 = new Player( uiTimeEnd, uiTimeStep, (time) => wmr2.step(time), () => wmr2.reset() );
player2.create();
```

With step; probably cannot get a reasonable result.

```{=html}
<div>
    <canvas id="wmr-canvas3"></canvas>
</div>
```

```{ojs}
wmr3 = new WMRSimulator( 'wmr-canvas3', WMR2DMode.ClosedForm, { addWall: true, addStep: true } );
player3 = new Player( uiTimeEnd, uiTimeStep, (time) => wmr3.step(time), () => wmr3.reset() );
player3.create();
```
