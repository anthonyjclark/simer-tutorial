---
title: "SimER Tutorial"
author: Anthony J. Clark
format:
  revealjs:
    progress: true
    controls: true
    controls-layout: bottom-right
    toc: true
    syntax-definitions:
      - pseudocode.xml
      - test_lang.xml
    highlight-style: pygments
---

## Evolutionary Robotics

The use of evolutionary algorithms to explore the design space of robots and their control software.

## Evolutionary Robotics: Research

There is a wide variety of research in evolutionary robotics, but I'll focus on:

1. Applications of evolutionary robotics
2. Algorithm development

## Evolutionary Robotics: Algorithm

```{mermaid}
%%| fig-align: center

flowchart LR
    Init[Initialize] --> Eval[Evaluate]
    Eval --> Stop{Stop?}
    Stop --Yes--> Retn[Return]
    Stop --No--> Sele[Select]
    Sele --> Modi[Modify]
    Modi --> Comb[Combine]
    Comb --> Eval
```

```{.pseudocode}
population = Initialize()

LOOP
  Evaluate(population)
  IF Stop(population) THEN BREAK
  selected = Select(population)
  children = Modify(selected)
  population = Combine(population, children)

RETURN population
```

## Practical Considerations

1. Simulation Environment

Major challenge: reality gap

## Parallelism

1. Parallelize replicate experiments (different random seeds)
2. Parallelize across generations (if mixing populations)
3. Parallelize across populations (multiple population per replicate)
4. Parallelize across individuals (multiple individuals per population)
5. Parallelize across trials (multiple trials per individual)

## Advice for Parallelism

- Plan to use $N - 2$ cores, where $N$ is the number of cores available
- Use a tool like [GNU Parallel](https://www.gnu.org/software/parallel/) at the replicate level
- Use a library like [Python multiprocessing](https://docs.python.org/3/library/multiprocessing.html) at lower levels
- Consider what you need to evaluate for early stopping when making your choices between higher and lower levels of parallelism
  - Do you care more about the variance across replicates? Parallelize at the replicate level
  - Do you care more about the performance of a single replicate? Parallelize at the individual level


## Running Example

Goal: ...

## Online Demos

## Full Examples
